@model List<Lugar>
@{
    string defaultImageUrl = "https://img.freepik.com/foto-gratis/angulo-bosque-3d-arboles-rocas_23-2150800507.jpg";
}

<div class="container py-5">
    @if (Model == null || !Model.Any())
    {
        <!-- No Places Available Message -->
        <div class="no-places-container">
            <div class="card shadow border-0">
                <div class="card-body text-center py-5">
                    <div class="empty-illustration mb-4">
                        <i class="fas fa-map-signs fa-4x text-secondary"></i>
                    </div>
                    <h3 class="fw-bold text-primary">No hay lugares añadidos aún</h3>
                    <p class="text-secondary mb-4">Sé el primero en compartir un lugar interesante con la comunidad.</p>
                   
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="placesContainer">
            @foreach (var lugar in Model)
            {
                <div class="col">
                    <div class="card lugar-card shadow h-100">
                        <div class="photo-container position-relative overflow-hidden">
                            <img src="@(string.IsNullOrEmpty(lugar.Imagen) ? defaultImageUrl : lugar.Imagen)"
                                 alt="@lugar.Nombre" class="card-img-top" onerror="this.src='@defaultImageUrl';" />
                            <div class="overlay-badge">
                                <span class="badge bg-light text-dark"><i class="fas fa-camera me-1"></i> Photos</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@lugar.Nombre</h5>
                            <p class="card-location"><i class="fas fa-map-marker-alt location-icon"></i> @lugar.Ubicacion</p>
                            <p class="card-description">@lugar.Descripcion</p>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center bg-white">
                            <a asp-controller="Lugares" asp-action="Details" asp-route-idlugar="@lugar.IdLugar" class="btn btn-primary btn-sm">Leer más</a>
                            <div class="card-actions">
                                <a asp-controller="Home" asp-action="EditLugar" asp-route-idLugar="@lugar.IdLugar" class="edit-link" title="Editar">
                                    <i class="fas fa-pencil-alt text-primary"></i>
                                </a>
                                <a href="#" class="delete-link" data-id="@lugar.IdLugar" title="Eliminar">
                                    <i class="fas fa-trash-alt text-danger"></i>
                                </a>
                            </div>
                        </div>
                        <div class="date-badge">
                            <small><i class="far fa-clock me-1"></i> @lugar.Horario</small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- SweetAlert2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.27/dist/sweetalert2.min.css" rel="stylesheet">
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.27/dist/sweetalert2.min.js"></script>

<script>
    $(document).ready(function() {
        // Eliminar lugar con SweetAlert
        $('.delete-link').click(function(e) {
            e.preventDefault();

            var idLugar = $(this).data('id');
            var card = $(this).closest('.col');
            var lugarName = $(this).closest('.card').find('.card-title').text();

            Swal.fire({
                title: '¿Estás seguro?',
                text: `¿Deseas eliminar el lugar "${lugarName}"?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/Home/DeleteConfirmed', { idLugar: idLugar }, function () {
                        // Animación de desvanecimiento al eliminar
                        card.fadeOut(300, function() {
                            $(this).remove();

                            // Mostrar mensaje de éxito con SweetAlert
                            Swal.fire({
                                icon: 'success',
                                title: '¡Eliminado!',
                                text: 'El lugar ha sido eliminado correctamente.',
                                timer: 2000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });

                            // Verificar si ya no hay más lugares y mostrar el mensaje de "no hay lugares"
                            if ($('#placesContainer .col').length === 0) {
                                location.reload();
                            }
                        });
                    }).fail(function() {
                        // Mensaje de error con SweetAlert
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'No se pudo eliminar el lugar. Intenta nuevamente.'
                        });
                    });
                }
            });
        });
    });
</script>

<style>
    :root {
        --primary-color: #4a6fa5;
        --secondary-color: #6c8fb8;
        --accent-color: #ff6b6b;
        --text-primary: #333333;
        --text-secondary: #666666;
        --light-bg: #f8f9fa;
        --card-shadow: 0 5px 15px rgba(0,0,0,0.05);
        --hover-shadow: 0 10px 25px rgba(0,0,0,0.1);
        --transition-speed: 0.3s;
    }

    body {
        background-color: var(--light-bg);
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
    }

    .container {
        max-width: 1200px;
    }

    /* No Places Message Styles */
    .no-places-container {
        max-width: 600px;
        margin: 3rem auto;
    }

    .empty-illustration {
        color: var(--secondary-color);
        opacity: 0.7;
        margin-bottom: 1.5rem;
    }

    /* Card Styles */
    .lugar-card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        transition: all var(--transition-speed) ease;
    }

        .lugar-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--hover-shadow);
        }

    .photo-container {
        height: 200px;
    }

    .card-img-top {
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .lugar-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .overlay-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        z-index: 2;
    }

    .badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 500;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .card-body {
        padding: 1.5rem;
    }

    .card-title {
        font-weight: 700;
        font-size: 1.25rem;
        color: var(--primary-color);
        margin-bottom: 10px;
    }

    .card-location {
        font-size: 0.95rem;
        color: var(--text-secondary);
        margin-bottom: 15px;
        display: flex;
        align-items: center;
    }

    .location-icon {
        color: var(--accent-color);
        margin-right: 5px;
    }

    .card-description {
        font-size: 1rem;
        color: var(--text-secondary);
        line-height: 1.6;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .card-footer {
        border-top: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.5rem;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        border-radius: 30px;
        padding: 6px 16px;
        font-weight: 500;
        transition: all var(--transition-speed) ease;
    }

        .btn-primary:hover {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            transform: translateY(-2px);
        }

    .card-actions {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .edit-link, .delete-link {
        font-size: 1.2rem;
        transition: all var(--transition-speed) ease;
    }

        .edit-link:hover, .delete-link:hover {
            transform: scale(1.1);
        }

    .date-badge {
        position: absolute;
        bottom: 75px;
        right: 15px;
        background-color: rgba(255,255,255,0.9);
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
        color: var(--text-secondary);
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

    /* SweetAlert Customization */
    .swal2-popup {
        border-radius: 15px;
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
    }

    .swal2-title {
        color: var(--text-primary);
        font-weight: 600;
    }

    .swal2-html-container {
        color: var(--text-secondary);
    }

    .swal2-icon {
        border-color: var(--accent-color);
    }
</style>